"""empty message

Revision ID: ae6c11524e2e
Revises: 30df6bad89ba
Create Date: 2024-04-14 05:48:30.674190

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ae6c11524e2e"
down_revision: Union[str, None] = "30df6bad89ba"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("mail", "mail", existing_type=sa.VARCHAR(length=50), nullable=False)
    op.add_column(
        "network_traffic", sa.Column("timestamp", sa.String(length=50), nullable=True)
    )
    op.add_column(
        "network_traffic", sa.Column("source_ip", sa.String(length=50), nullable=True)
    )
    op.add_column(
        "network_traffic",
        sa.Column("destination_ip", sa.String(length=50), nullable=True),
    )
    op.add_column(
        "network_traffic", sa.Column("protocol", sa.String(length=50), nullable=True)
    )
    op.add_column(
        "network_traffic", sa.Column("port", sa.String(length=50), nullable=True)
    )
    op.add_column(
        "network_traffic", sa.Column("packet_size", sa.String(length=50), nullable=True)
    )
    op.add_column(
        "network_traffic", sa.Column("prediction", sa.String(length=50), nullable=True)
    )
    op.drop_column("network_traffic", "num_shells")
    op.drop_column("network_traffic", "urgent")
    op.drop_column("network_traffic", "label")
    op.drop_column("network_traffic", "num_outbound_cmds")
    op.drop_column("network_traffic", "same_srv_rate")
    op.drop_column("network_traffic", "dst_host_srv_serror_rate")
    op.drop_column("network_traffic", "difficulty")
    op.drop_column("network_traffic", "land")
    op.drop_column("network_traffic", "num_file_creations")
    op.drop_column("network_traffic", "duration")
    op.drop_column("network_traffic", "src_bytes")
    op.drop_column("network_traffic", "dst_host_srv_count")
    op.drop_column("network_traffic", "created_at")
    op.drop_column("network_traffic", "count")
    op.drop_column("network_traffic", "wrong_fragment")
    op.drop_column("network_traffic", "serror_rate")
    op.drop_column("network_traffic", "num_root")
    op.drop_column("network_traffic", "protocol_type")
    op.drop_column("network_traffic", "root_shell")
    op.drop_column("network_traffic", "rerror_rate")
    op.drop_column("network_traffic", "dst_host_srv_diff_host_rate")
    op.drop_column("network_traffic", "is_guest_login")
    op.drop_column("network_traffic", "dst_host_same_src_port_rate")
    op.drop_column("network_traffic", "num_failed_logins")
    op.drop_column("network_traffic", "logged_in")
    op.drop_column("network_traffic", "su_attempted")
    op.drop_column("network_traffic", "srv_rerror_rate")
    op.drop_column("network_traffic", "dst_host_serror_rate")
    op.drop_column("network_traffic", "dst_host_diff_srv_rate")
    op.drop_column("network_traffic", "srv_count")
    op.drop_column("network_traffic", "flag")
    op.drop_column("network_traffic", "is_host_login")
    op.drop_column("network_traffic", "dst_bytes")
    op.drop_column("network_traffic", "dst_host_same_srv_rate")
    op.drop_column("network_traffic", "num_compromised")
    op.drop_column("network_traffic", "diff_srv_rate")
    op.drop_column("network_traffic", "dst_host_rerror_rate")
    op.drop_column("network_traffic", "hot")
    op.drop_column("network_traffic", "dst_host_count")
    op.drop_column("network_traffic", "num_access_files")
    op.drop_column("network_traffic", "dst_host_srv_rerror_rate")
    op.drop_column("network_traffic", "service")
    op.drop_column("network_traffic", "srv_diff_host_rate")
    op.drop_column("network_traffic", "srv_serror_rate")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "network_traffic",
        sa.Column(
            "srv_serror_rate", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "srv_diff_host_rate",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column("service", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_srv_rerror_rate",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "num_access_files",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_count", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column("hot", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_rerror_rate",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "diff_srv_rate", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "num_compromised", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_same_srv_rate",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_bytes", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "is_host_login", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column("flag", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "srv_count", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_diff_srv_rate",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_serror_rate",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "srv_rerror_rate", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "su_attempted", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "logged_in", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "num_failed_logins",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_same_src_port_rate",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "is_guest_login", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_srv_diff_host_rate",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "rerror_rate", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "root_shell", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "protocol_type", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "num_root", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "serror_rate", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "wrong_fragment", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column("count", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_srv_count",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "src_bytes", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "duration", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "num_file_creations",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column("land", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "difficulty", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "dst_host_srv_serror_rate",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "same_srv_rate", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "num_outbound_cmds",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "network_traffic",
        sa.Column("label", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    )
    op.add_column(
        "network_traffic",
        sa.Column("urgent", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    )
    op.add_column(
        "network_traffic",
        sa.Column(
            "num_shells", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("network_traffic", "prediction")
    op.drop_column("network_traffic", "packet_size")
    op.drop_column("network_traffic", "port")
    op.drop_column("network_traffic", "protocol")
    op.drop_column("network_traffic", "destination_ip")
    op.drop_column("network_traffic", "source_ip")
    op.drop_column("network_traffic", "timestamp")
    op.alter_column("mail", "mail", existing_type=sa.VARCHAR(length=50), nullable=True)
    # ### end Alembic commands ###
